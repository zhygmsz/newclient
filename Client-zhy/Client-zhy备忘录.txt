

打完图集后，每张小图的Alpha is Transparency设置没了，查原因
聊天UI上的Common和Chat图集换成新打的，以替换meta文件的方式搞
写个工具查询Prefab上的UIPanel组件都在哪里
写工具查询指定Prefab上使用的UIAtlas以及图片都在那里
Prefab引用的脚本在NGUI的dll里，现在把dll去掉，换成源代码，如何操作？
在Prefab里，根据dll文件的id以及内部的脚本localid，找到脚本的名字，然后用名字遍历新ngui源码目录，找到同名的新代码文件的id，在Prefab的meta引用关系里，把以前的两层引用结构换成一层结构，新代码文件id替换上即可


--工作机上的待做项
100：新的UI遮罩是如何通过sortorder和depth一起工作的
103：tolua.c里的indexevent和newindexevent方法是怎么触发的，event方法和wrap里的方法先后顺序
107：看panel的裁剪，上下拖拽时，查看panel和scrollview的上下移动，以及panel的offset，裁剪shader
114：查pixelSizeAdjustment的根源，查UIRoot工作原理
123：查tolua的委托时怎么生成的
129：UIParticle和UISpriteGray和panel内裁剪UISpriteGray
130：记录ChatData文件的return ChatData， return boolean错误，对比PuzzleData，总结lua的模块
137：重写检测输入框文本对应的链接是否有效的字符串查找方法，整个聊天里，要做到处理字符串的过程中尽可能少的产生额外的字符串，最好的方式是，原始字符串（这是必不可少的），最后以table.concat方式拼出一个总串，然后自己实现聊天需要的字符串算法
138：
144：测试，在class里，一个方法使用的变量是否会存在于其upvalue列表里，一个文件内的全局方法或者loca方法呢，一个module里的全局方法或local方法呢？验证下
146：查guid和fileid，查找missing的脚本是什么
147：当一个panel内的GameObject调用SetActive时，会触发panel的重绘吗？验证
148：contentitem/widget扩展item支持多个uieventid，支持两种模式，一种单选的，一种多选的
149：UIWrapContent支持自动选中并下滑到某个指定的realIdx
155：列出UIPrefab上的所有panel以及路径
157：测试UIWrapContent的上下滑动回调性能
158：重写UITableWrapContent，把需要回调的realidx用集合保存起来，每次执行完回调就清空该集合，上下滑动过程中计算那些realidx应该进该集合。做法类似资源加载模块，把资源的加载状态分类一步只处理一个状态，下一步过程交给另外的方法处理，每个步骤处理方法执行完后设置状态，然后使用更新的方式驱动。
159：把UIPageAndGrid组件的Page做成可循环使用的结构，引入UIWrapContent组件，这样对方便对每一个Item分配UI事件id，不再对dataList做划分，使用原生的带有顺序的dataList为数据源，不同的page引用不同的数据区间即可，更方便，减少table创建
160：针对UITableAndGrid能定点刷新某个twoitem，以及刷新整个处于展开状态的oneitem
163：测试直接将lua层的function赋值给C#层的委托，每次执行该委托时，是否会每次都创建一个tolua的委托对象
164：一个lua层的function传到C#层，LuaFunction.cs是如何起到桥接作用的
165：方法A内的local方法B，那么A每被调一次，B就创建一次吗？
167：UIPanel的GameObject层级关系A B ，B内的一个Transform使用GetComponentInParents，如果B是隐藏的，则会找到A，查代码
168：把对象池的方式换成GameEvent的写法，严格按照table的进出方式，不再用item里设置状态，并以遍历的方式找合法的状态的方式
170：NGUI字体加粗bug改良

-------------------------------------------------------待做项-------------------------------------------------------
--随笔记录对该项目的所有想要实现的
2：游戏内搭建一个本地服务器
3：看地形编辑器代码，用地图编辑器在地图上种事件/实体并导出数据在游戏内解析
5：实现一个角色在场景中跟着摇杆移动，涉及到unity的动画系统和模型
6：实现摄像机跟随，与手势操作相机视角
7：实现寻路模块
8：实现角色换装
9：看技能编辑器代码，实现技能系统和buff系统
10：实现任务系统
11：看UI编辑器打包代码，实现UI框架，然后各种UI
12：做地图内ai时，参考aoi模式
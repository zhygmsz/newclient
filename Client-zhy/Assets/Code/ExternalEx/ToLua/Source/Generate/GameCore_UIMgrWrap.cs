//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class GameCore_UIMgrWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(GameCore.UIMgr), typeof(System.Object));
		L.RegFunction("Init", Init);
		L.RegFunction("ShowUI", ShowUI);
		L.RegFunction("UnShowUI", UnShowUI);
		L.RegFunction("OnCreate", OnCreate);
		L.RegFunction("OnEnable", OnEnable);
		L.RegFunction("OnDisable", OnDisable);
		L.RegFunction("OnDestroy", OnDestroy);
		L.RegFunction("OnClick", OnClick);
		L.RegFunction("OnPress", OnPress);
		L.RegFunction("OnSelect", OnSelect);
		L.RegFunction("OnDoubleClick", OnDoubleClick);
		L.RegFunction("OnDragStart", OnDragStart);
		L.RegFunction("OnDrag", OnDrag);
		L.RegFunction("OnDragEnd", OnDragEnd);
		L.RegFunction("OnDragOver", OnDragOver);
		L.RegFunction("OnDragOut", OnDragOut);
		L.RegFunction("New", _CreateGameCore_UIMgr);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("UIRootTrsansform", get_UIRootTrsansform, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateGameCore_UIMgr(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				GameCore.UIMgr obj = new GameCore.UIMgr();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: GameCore.UIMgr.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 13);
			LuaFunction arg0 = ToLua.CheckLuaFunction(L, 1);
			LuaFunction arg1 = ToLua.CheckLuaFunction(L, 2);
			LuaFunction arg2 = ToLua.CheckLuaFunction(L, 3);
			LuaFunction arg3 = ToLua.CheckLuaFunction(L, 4);
			LuaFunction arg4 = ToLua.CheckLuaFunction(L, 5);
			LuaFunction arg5 = ToLua.CheckLuaFunction(L, 6);
			LuaFunction arg6 = ToLua.CheckLuaFunction(L, 7);
			LuaFunction arg7 = ToLua.CheckLuaFunction(L, 8);
			LuaFunction arg8 = ToLua.CheckLuaFunction(L, 9);
			LuaFunction arg9 = ToLua.CheckLuaFunction(L, 10);
			LuaFunction arg10 = ToLua.CheckLuaFunction(L, 11);
			LuaFunction arg11 = ToLua.CheckLuaFunction(L, 12);
			LuaFunction arg12 = ToLua.CheckLuaFunction(L, 13);
			GameCore.UIMgr.Init(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10, arg11, arg12);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ShowUI(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			string arg1 = ToLua.CheckString(L, 2);
			GameCore.UIMgr.ShowUI(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int UnShowUI(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			GameCore.UIMgr.UnShowUI(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnCreate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GameCore.UIFrame arg0 = (GameCore.UIFrame)ToLua.CheckObject<GameCore.UIFrame>(L, 1);
			GameCore.UIMgr.OnCreate(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnEnable(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GameCore.UIFrame arg0 = (GameCore.UIFrame)ToLua.CheckObject<GameCore.UIFrame>(L, 1);
			GameCore.UIMgr.OnEnable(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnDisable(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GameCore.UIFrame arg0 = (GameCore.UIFrame)ToLua.CheckObject<GameCore.UIFrame>(L, 1);
			GameCore.UIMgr.OnDisable(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnDestroy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GameCore.UIFrame arg0 = (GameCore.UIFrame)ToLua.CheckObject<GameCore.UIFrame>(L, 1);
			GameCore.UIMgr.OnDestroy(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnClick(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
			GameCore.UIMgr.OnClick(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnPress(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 2);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 3);
			GameCore.UIMgr.OnPress(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnSelect(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 2);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 3);
			GameCore.UIMgr.OnSelect(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnDoubleClick(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
			GameCore.UIMgr.OnDoubleClick(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnDragStart(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
			GameCore.UIMgr.OnDragStart(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnDrag(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			UnityEngine.Vector2 arg1 = ToLua.ToVector2(L, 2);
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 3);
			GameCore.UIMgr.OnDrag(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnDragEnd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
			GameCore.UIMgr.OnDragEnd(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnDragOver(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			UnityEngine.GameObject arg1 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 3);
			GameCore.UIMgr.OnDragOver(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnDragOut(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			UnityEngine.GameObject arg1 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 3);
			GameCore.UIMgr.OnDragOut(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UIRootTrsansform(IntPtr L)
	{
		try
		{
			ToLua.PushSealed(L, GameCore.UIMgr.UIRootTrsansform);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}


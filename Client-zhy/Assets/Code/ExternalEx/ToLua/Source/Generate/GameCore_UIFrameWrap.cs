//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class GameCore_UIFrameWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(GameCore.UIFrame), typeof(System.Object));
		L.RegFunction("OnShow", OnShow);
		L.RegFunction("OnUnShow", OnUnShow);
		L.RegFunction("Find", Find);
		L.RegFunction("FindComponent", FindComponent);
		L.RegFunction("DuplicateAndAdd", DuplicateAndAdd);
		L.RegFunction("New", _CreateGameCore_UIFrame);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("UIID", get_UIID, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateGameCore_UIFrame(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				GameCore.UIFrame obj = new GameCore.UIFrame(arg0, arg1);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: GameCore.UIFrame.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnShow(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GameCore.UIFrame obj = (GameCore.UIFrame)ToLua.CheckObject<GameCore.UIFrame>(L, 1);
			obj.OnShow();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnUnShow(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			GameCore.UIFrame obj = (GameCore.UIFrame)ToLua.CheckObject<GameCore.UIFrame>(L, 1);
			obj.OnUnShow();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Find(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			GameCore.UIFrame obj = (GameCore.UIFrame)ToLua.CheckObject<GameCore.UIFrame>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			UnityEngine.Transform o = obj.Find(arg0);
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int FindComponent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			GameCore.UIFrame obj = (GameCore.UIFrame)ToLua.CheckObject<GameCore.UIFrame>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			UnityEngine.Component o = obj.FindComponent(arg0, arg1);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DuplicateAndAdd(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			GameCore.UIFrame obj = (GameCore.UIFrame)ToLua.CheckObject<GameCore.UIFrame>(L, 1);
			UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.CheckObject(L, 2, typeof(UnityEngine.Transform));
			UnityEngine.Transform arg1 = (UnityEngine.Transform)ToLua.CheckObject(L, 3, typeof(UnityEngine.Transform));
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			UnityEngine.Transform o = obj.DuplicateAndAdd(arg0, arg1, arg2);
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UIID(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			GameCore.UIFrame obj = (GameCore.UIFrame)o;
			int ret = obj.UIID;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index UIID on a nil value");
		}
	}
}

